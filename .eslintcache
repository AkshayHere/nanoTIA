[{"F:\\Projects\\React\\nanotia\\src\\index.js":"1","F:\\Projects\\React\\nanotia\\src\\App.js":"2","F:\\Projects\\React\\nanotia\\src\\reportWebVitals.js":"3","F:\\Projects\\React\\nanotia\\src\\CustomRouter.js":"4","F:\\Projects\\React\\nanotia\\src\\saga\\saga.js":"5","F:\\Projects\\React\\nanotia\\src\\redux\\middlewares.js":"6","F:\\Projects\\React\\nanotia\\src\\redux\\reducers.js":"7","F:\\Projects\\React\\nanotia\\src\\redux\\reducerManager.js":"8","F:\\Projects\\React\\nanotia\\src\\saga\\serverRequest.js":"9","F:\\Projects\\React\\nanotia\\src\\redux\\constants.js":"10","F:\\Projects\\React\\nanotia\\src\\pages\\home\\App.js":"11","F:\\Projects\\React\\nanotia\\src\\pages\\article\\App.js":"12","F:\\Projects\\React\\nanotia\\src\\pages\\common\\Master.js":"13","F:\\Projects\\React\\nanotia\\src\\pages\\common\\Navigation.js":"14","F:\\Projects\\React\\nanotia\\src\\pages\\common\\theme.js":"15"},{"size":512,"mtime":1609342398292,"results":"16","hashOfConfig":"17"},{"size":528,"mtime":1609342337104,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":4923,"mtime":1609342610930,"results":"20","hashOfConfig":"17"},{"size":5069,"mtime":1609341059226,"results":"21","hashOfConfig":"17"},{"size":832,"mtime":1609341136833,"results":"22","hashOfConfig":"17"},{"size":4693,"mtime":1597908343004,"results":"23","hashOfConfig":"17"},{"size":1781,"mtime":1581312386448,"results":"24","hashOfConfig":"17"},{"size":1832,"mtime":1609341030002,"results":"25","hashOfConfig":"17"},{"size":953,"mtime":1599616555891,"results":"26","hashOfConfig":"17"},{"size":1005,"mtime":1609349698882,"results":"27","hashOfConfig":"17"},{"size":353,"mtime":1609340884573,"results":"28","hashOfConfig":"17"},{"size":3399,"mtime":1609353062937,"results":"29","hashOfConfig":"17"},{"size":3930,"mtime":1609352185348,"results":"30","hashOfConfig":"17"},{"size":254,"mtime":1609351614516,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1vprnuf",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"F:\\Projects\\React\\nanotia\\src\\index.js",["68"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './CustomRouter';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["69","70"],"F:\\Projects\\React\\nanotia\\src\\App.js",[],"F:\\Projects\\React\\nanotia\\src\\reportWebVitals.js",[],"F:\\Projects\\React\\nanotia\\src\\CustomRouter.js",["71","72","73"],"import React, { Component, lazy, Suspense } from 'react';\r\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { createReducerManager } from 'redux/reducerManager';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { logger, commonProcessors } from 'redux/middlewares';\r\nimport { reducer } from 'redux/reducers';\r\nimport rootSaga from 'saga/saga';\r\n\r\nimport { createBrowserHistory } from 'history';\r\nimport { connectRouter, routerMiddleware, ConnectedRouter } from 'connected-react-router';\r\n// import AnimatedWait from 'components/AnimatedWait';\r\n// import Notifier from 'components/Notifier';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst staticReducers = {\r\n  router: connectRouter(history),\r\n  common: reducer\r\n}\r\n\r\n\r\n\r\n//configure redux store\r\nconst configureStore = (initialState) => {\r\n\r\n  //init router middleware\r\n  const routeMiddleware = routerMiddleware(history);\r\n\r\n  //init saga middleware\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  \r\n  // //init dynamic middlewares\r\n  // const dynamicMiddlewares = createDynamicMiddlewares();\r\n\r\n  // //dynamic middlewares\r\n  // const middlewareEnhancer = applyMiddleware(logger, routeMiddleware, commonProcessors, sagaMiddleware, dynamicMiddlewares.enhancer);\r\n\r\n  // //build enhancers\r\n  // const enhancers = [middlewareEnhancer]\r\n  // const composedEnhancers = compose(...enhancers)\r\n\r\n  //init reducerManager\r\n  const reducerManager = createReducerManager(staticReducers)\r\n\r\n  const store = createStore(\r\n    reducerManager.reduce,\r\n    initialState,\r\n    applyMiddleware(logger, routeMiddleware, commonProcessors, sagaMiddleware)\r\n  )\r\n\r\n  store.reducerManager = reducerManager;\r\n  store.sagaMiddleware = sagaMiddleware;\r\n\r\n  return store\r\n}\r\n\r\n//init the store\r\nconst store = configureStore();\r\n\r\n//run sagas\r\nstore.sagaMiddleware.run(rootSaga);\r\n\r\nwindow.store = store;\r\n\r\nconst Dashboard = (lazy(() => (\r\n  import(/* webpackChunkName: \"Dashboard\" */ 'pages/home/App')\r\n)));\r\n\r\nconst Article = (lazy(() => (\r\n  import(/* webpackChunkName: \"Article\" */ 'pages/article/App')\r\n)));\r\n\r\n\r\n// class CustomRouter extends Component {\r\n\r\n//   componentDidMount() {}\r\n\r\n//   render() {\r\n//     return (\r\n//       <Provider store={store}>\r\n//         <SnackbarProvider\r\n//           maxSnack={3}\r\n//           anchorOrigin={{\r\n//             vertical: 'top',\r\n//             horizontal: 'right',\r\n//           }}\r\n//         >\r\n//           <ConnectedRouter history={history}>\r\n//             <Suspense fallback={<div />}>\r\n//               <Switch>\r\n//               <Route exact path=\"/debug\" component={Debug2} />\r\n//                 {/* Authentication */}\r\n//                 <Route exact path=\"/\" component={SignIn} />\r\n//                 <Route exact path=\"/signin\" component={SignIn} />\r\n\r\n//                 {/* Applications */}\r\n//                 <Route exact path=\"/applications\" component={Applications} />\r\n//                 <Route exact path=\"/applications/details/:applicationRefNo\" component={ApplicationDetailView} />\r\n\r\n//                 <Route exact path=\"/dashboard\" component={Dashboard} />\r\n\r\n//                 <Route exact path=\"/policies\" component={Policies} />\r\n\r\n\r\n//                 <Route exact path=\"/reports\" component={Reports} />\r\n\r\n                \r\n\r\n//                 <Route exact path=\"/cancellations\" component={Cancellations} />\r\n\r\n//                 <Route exact path=\"/tasks/view/:taskRefNo\" component={TaskView} />\r\n\r\n//                 <Route exact path=\"/manage-agents\" component={ManageAgents} />\r\n//                 <Route exact path=\"/manage-agents/create\" component={AgentCreate} />\r\n//                 <Route exact path=\"/manage-agents/update/:agentRefNo\" component={AgentUpdate} />\r\n\r\n//                 <Route exact path=\"/ncd-enquiry/\" component={NCDEnquiry} />\r\n\r\n//               </Switch>\r\n//             </Suspense>\r\n//           </ConnectedRouter>\r\n//           <AnimatedWait />\r\n//           <Notifier />\r\n//         </SnackbarProvider>\r\n//       </Provider>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default function CustomRouter() {\r\n  return (\r\n    <Provider store={store}>\r\n        <SnackbarProvider\r\n          maxSnack={3}\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n        >\r\n          <ConnectedRouter history={history}>\r\n            <Suspense fallback={<div />}>\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Dashboard} />\r\n                <Route exact path=\"/topic\" component={Article} />\r\n              </Switch>\r\n            </Suspense>\r\n          </ConnectedRouter>\r\n          {/* <AnimatedWait /> */}\r\n          {/* <Notifier /> */}\r\n        </SnackbarProvider>\r\n      </Provider>\r\n  );\r\n}\r\n\r\n// export default CustomRouter;","F:\\Projects\\React\\nanotia\\src\\saga\\saga.js",["74","75","76"],"// This file contains the sagas used for async actions in our app. It's divided into\r\n// \"effects\" that the sagas call (`fetch` ) and the actual sagas themselves,\r\n// which listen for actions.\r\n\r\n// Sagas help us gather all our side effects (network requests in this case) in one place\r\n\r\n//import {browserHistory} from 'react-router'\r\nimport { select, take, call, put, spawn, delay, all, fork } from 'redux-saga/effects';\r\nimport serverRequest from './serverRequest';\r\n\r\n// import moment from 'moment';\r\nimport { isEmpty, cloneDeep } from 'lodash';\r\n\r\nimport {\r\n\t/*\r\n    COMMON APP ACTIONS\r\n    */\r\n\tAPI,\r\n\tAPI_SAVE_RESPONSE,\r\n\tUPDATE_COMMON_VALUES,\r\n\tADD_NOTIFICATION,\r\n\r\n\t//UI Effects\r\n    SHOW_PAGE_LOADER,\r\n\tHIDE_PAGE_LOADER,\r\n\t\r\n\tMY_PROFILE\r\n\r\n} from 'redux/constants';\r\n\r\n// import NotificationPayLoad from 'components/NotificationPayload'\r\n\r\n\r\n/*\r\n * Selector. The query depends by the state shape\r\n */\r\nexport const getBearerToken = (state) => state.common.token;\r\n//export const getSteps = (state) => state.steps;\r\n\r\nfunction* executeAPICall(url, data, identifier,method){\r\n\tlet uniqueIdentifier = identifier;\r\n\t\tif (isEmpty(uniqueIdentifier)) {\r\n\t\t\t// uniqueIdentifier = moment().valueOf();\r\n\t\t}\r\n\r\n\t\t//we save the request to store\r\n\t\tlet saveApiPayload = {\r\n\t\t\t[uniqueIdentifier]: {\r\n\t\t\t\trequest: cloneDeep(data),\r\n\t\t\t\tresponse: {},\r\n\t\t\t\taxioError: false\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet config = {};\r\n\t\t\r\n\t\t//using browser cookie httponly credentials\r\n\t\tlet token = null; // yield select(getBearerToken);\r\n\r\n\t\t//show the page loader\r\n        yield put({ type: SHOW_PAGE_LOADER })\r\n\r\n\t\tconst { status, ...response } = yield call(serverRequest.api, url, data, config, token, method);\r\n\r\n\t\tconst responseData = \"data\" in response && response.data ? response.data : null;\r\n\t\t// console.log('responseData here : ', responseData);\r\n\r\n\r\n\t\tif (status !== 200) {\r\n\t\t\t//not http status 200\r\n\t\t\tsaveApiPayload[uniqueIdentifier].axioError = true;\r\n\r\n\t\t} else {\r\n\t\t\tif (responseData && 'success' in responseData && responseData.success) {\r\n\t\t\t\t// successful scenario\r\n\t\t\t\tif (responseData.success === 'ok') {\r\n\r\n\t\t\t\t} else if (responseData.success === 'error') {\r\n\t\t\t\t\tconsole.warn('this error happened!');\r\n\t\t\t\t\tif ('errors' in responseData && responseData.errors.length) {\r\n                        for (var i = 0; i < responseData.errors.length; i++) {\r\n                            // let notification = new NotificationPayLoad(responseData.errors[i].message, 'error');\r\n                            // window.store.dispatch({ type: ADD_NOTIFICATION, notification: notification });\r\n                        }\r\n                    }\r\n    \r\n                    if ('error' in responseData && responseData.error) {\r\n                        // let notificationText = new NotificationPayLoad(responseData.error, 'error');\r\n                        // window.store.dispatch({ type: ADD_NOTIFICATION, notification: notificationText });\r\n                    } \r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsaveApiPayload[uniqueIdentifier].axioError = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//we save the response to store\r\n\t\tsaveApiPayload[uniqueIdentifier].response = cloneDeep(responseData);\r\n\r\n\t\tyield put({ type: API_SAVE_RESPONSE, payload: saveApiPayload })\r\n\r\n\t\t//hide the page loader        \r\n        yield put({ type: HIDE_PAGE_LOADER })\r\n}\r\n\r\n// send request to api\r\nexport function* apiFlow() {\r\n\twhile (true) {\r\n\t\tconst request = yield take(API);\r\n\r\n\t\tconst { url, data, identifier,method } = request.payload;\r\n\r\n\t\tyield fork(executeAPICall, url, data, identifier,method)\r\n\r\n\r\n\t}\r\n}\r\n\r\n//retrieve profile\r\nexport function* retrieveProfileFlow() {\r\n\twhile (true) {\r\n\t\tconst request = yield take(MY_PROFILE);\r\n\r\n\t\t//const { token } = request.payload;\r\n\t\tconst url = process.env.REACT_APP_PAS2_URL +\"int/account/myProfile\";\r\n\t\twindow.store.dispatch({\r\n\t\t\ttype: API, payload: {\r\n\t\t\t\tidentifier: \"getmyprofile\",\r\n\t\t\t\tmethod: \"get\",\r\n\t\t\t\turl: url\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n}\r\n\r\n//retrieve profile\r\nexport function* retrieveProfileCompleteFlow() {\r\n\twhile (true) {\r\n\t\tconst { payload } = yield take(API_SAVE_RESPONSE);\r\n\t\tconst { getmyprofile } = payload;\r\n\r\n\t\tif (!isEmpty(getmyprofile)) {\r\n\t\t\t//received response from server\r\n\t\t\tconst { response } = getmyprofile;\r\n\r\n\t\t\tif (!isEmpty(response)) {\r\n\t\t\t\t//we got ther response\r\n\t\t\t\tconst { profile, success } = response;\r\n\r\n\t\t\t\tif (!isEmpty(success) && success === 'ok' && !isEmpty(profile)) {\r\n\t\t\t\t\t//save the profile\r\n\t\t\t\t\twindow.store.dispatch({\r\n\t\t\t\t\t\ttype: UPDATE_COMMON_VALUES,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tprofile: profile\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t}\r\n}\r\n\r\n//https://github.com/redux-saga/redux-saga/blob/master/docs/advanced/RootSaga.md\r\nexport default function* root() {\r\n\tconst sagas = [\r\n\t\tapiFlow,\r\n\t\tretrieveProfileFlow,\r\n\t\tretrieveProfileCompleteFlow\r\n\t];\r\n\r\n\tyield all(\r\n\t\tsagas.map((saga) =>\r\n\t\t\tspawn(function* () {\r\n\t\t\t\twhile (true) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tyield call(saga);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tyield delay(1000); // Avoid infinite failures blocking app TODO use backoff retry policy...\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t)\r\n\t);\r\n}\r\n","F:\\Projects\\React\\nanotia\\src\\redux\\middlewares.js",["77","78","79"],"import * as ACTIONS from \"./constants\";\r\n/**\r\n* Logs all actions and states after they are dispatched.\r\n*/\r\nexport const logger = store => next => action => {\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    console.group(action.type)\r\n    console.info('dispatching', action)\r\n  }\r\n  let result = next(action)\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    console.log('next state', store.getState())\r\n    console.groupEnd()\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport const commonProcessors = store => next => action => {\r\n\r\n  switch (action.type) {\r\n    case ACTIONS.SET_FIELD_VALUES:\r\n      let valid = true;\r\n      let payload = action.payload;\r\n      \r\n      let fieldId = Object.keys(payload)[0];\r\n      let value = Object.values(payload)[0];\r\n\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return next(action)\r\n}","F:\\Projects\\React\\nanotia\\src\\redux\\reducers.js",[],"F:\\Projects\\React\\nanotia\\src\\redux\\reducerManager.js",[],"F:\\Projects\\React\\nanotia\\src\\saga\\serverRequest.js",["80"],"import axios from 'axios';\r\nimport {merge,isEmpty} from 'lodash'\r\n// import NotificationPayLoad from 'components/NotificationPayload'\r\nimport {\r\n    ADD_NOTIFICATION\r\n} from 'redux/constants'\r\n\r\n// Add a request interceptor\r\naxios.interceptors.request.use(function (config) {\r\n    return config;\r\n}, function (error) {\r\n    return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\naxios.interceptors.response.use(function (response) {\r\n    return response;\r\n}, function (error) {\r\n    // Do something with response error\r\n    // console.log(error.message);\r\n    return Promise.reject(error);\r\n});\r\n\r\n\r\nconst serverRequest = {\r\n\r\n\r\n    /**\r\n     * Send API request\r\n     * @param  {url} url    url of endpoint excluding domain\r\n     * @param  {object} payload   payload\r\n     * @param  {object} config\r\n     * \r\n     \r\n     */\r\n    api(url,payload,config,token,method) {\r\n\r\n        let postData = payload\r\n        let aConfig = merge({\r\n            'Accept' : 'application/json',\r\n            'X-Requested-With': 'XMLHttpRequest',\r\n            withCredentials: true\r\n        },config);\r\n\r\n        if(!isEmpty(token) ){\r\n            //use withCredentials for security\r\n            //aConfig.headers = {'Authorization': 'Bearer ' + token}\r\n        }\r\n        \r\n        if(method && method.toUpperCase() === 'GET'){\r\n        \r\n            return axios.get(url, aConfig)\r\n            .then(response => {\r\n                //console.log(response);\r\n                return response;\r\n            })\r\n            .catch(error => {\r\n\r\n            });\r\n        }\r\n\r\n        return axios.post(url, postData, aConfig)\r\n            .then(response => {\r\n                //console.log(response);\r\n                return response;\r\n            })\r\n            .catch(error => {\r\n            });\r\n    },\r\n}\r\n\r\nexport default serverRequest","F:\\Projects\\React\\nanotia\\src\\redux\\constants.js",[],"F:\\Projects\\React\\nanotia\\src\\pages\\home\\App.js",[],"F:\\Projects\\React\\nanotia\\src\\pages\\article\\App.js",[],"F:\\Projects\\React\\nanotia\\src\\pages\\common\\Master.js",["81","82"],"F:\\Projects\\React\\nanotia\\src\\pages\\common\\Navigation.js",["83","84"],"F:\\Projects\\React\\nanotia\\src\\pages\\common\\theme.js",[],{"ruleId":"85","severity":1,"message":"86","line":5,"column":8,"nodeType":"87","messageId":"88","endLine":5,"endColumn":23},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"85","severity":1,"message":"93","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"94","line":2,"column":17,"nodeType":"87","messageId":"88","endLine":2,"endColumn":30},{"ruleId":"85","severity":1,"message":"95","line":6,"column":27,"nodeType":"87","messageId":"88","endLine":6,"endColumn":34},{"ruleId":"85","severity":1,"message":"96","line":8,"column":10,"nodeType":"87","messageId":"88","endLine":8,"endColumn":16},{"ruleId":"85","severity":1,"message":"97","line":21,"column":2,"nodeType":"87","messageId":"88","endLine":21,"endColumn":18},{"ruleId":"85","severity":1,"message":"98","line":122,"column":9,"nodeType":"87","messageId":"88","endLine":122,"endColumn":16},{"ruleId":"85","severity":1,"message":"99","line":23,"column":11,"nodeType":"87","messageId":"88","endLine":23,"endColumn":16},{"ruleId":"85","severity":1,"message":"100","line":26,"column":11,"nodeType":"87","messageId":"88","endLine":26,"endColumn":18},{"ruleId":"85","severity":1,"message":"101","line":27,"column":11,"nodeType":"87","messageId":"88","endLine":27,"endColumn":16},{"ruleId":"85","severity":1,"message":"97","line":5,"column":5,"nodeType":"87","messageId":"88","endLine":5,"endColumn":21},{"ruleId":"85","severity":1,"message":"102","line":79,"column":12,"nodeType":"87","messageId":"88","endLine":79,"endColumn":16},{"ruleId":"85","severity":1,"message":"103","line":79,"column":18,"nodeType":"87","messageId":"88","endLine":79,"endColumn":25},{"ruleId":"85","severity":1,"message":"104","line":2,"column":3,"nodeType":"87","messageId":"88","endLine":2,"endColumn":9},{"ruleId":"85","severity":1,"message":"105","line":66,"column":11,"nodeType":"87","messageId":"88","endLine":66,"endColumn":17},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["106"],"no-negated-in-lhs",["107"],"'Component' is defined but never used.","'BrowserRouter' is defined but never used.","'compose' is defined but never used.","'select' is defined but never used.","'ADD_NOTIFICATION' is defined but never used.","'request' is assigned a value but never used.","'valid' is assigned a value but never used.","'fieldId' is assigned a value but never used.","'value' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'AppBar' is defined but never used.","'header' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]